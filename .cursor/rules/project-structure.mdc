---
description: Project Structure and Organization Guide
globs: **/*
alwaysApply: false
---
---
description: Project Structure and Organization Guide
globs: ["**/*"]
---
# Project Structure Reference

This document outlines the organization of our codebase and provides references to important directories and files.

## Root Level Organization

- `app/` - Next.js App Router pages and layouts
  - `app/api/auth/` - Authentication endpoints
  - `app/(auth)/` - Auth-related pages
  - `app/(main)/` - Main application pages
  - `app/products/` - Product-related pages (Phase 3)
    - `[id]/page.tsx` - Product detail page
    - `page.tsx` - Product listing page
  - `app/search/` - Search functionality (Phase 3)
  - `app/admin/` - Admin interface (Phase 3)
    - `products/` - Product management
    - `categories/` - Category management
- `components/` - Reusable UI components
  - `components/auth/` - Authentication components
  - `components/ui/` - Core UI components
    - `toast.tsx` - Toast notification primitive
    - `use-toast.tsx` - Toast hook and context
    - `toaster.tsx` - Toast notification renderer
  - `components/profile/` - User profile management components
    - `shipping-addresses.tsx` - Shipping address management
    - `preferences.tsx` - User preferences and notifications
    - `order-history.tsx` - Order history display
    - `profile-header.tsx` - User profile header with avatar and user info
    - `profile-tabs.tsx` - Profile section navigation
    - `edit-profile-dialog.tsx` - Profile editing modal with avatar support
  - `components/products/` - Product components (Phase 3)
    - `product-grid.tsx` - Product listing grid
    - `product-card.tsx` - Individual product card
    - `product-gallery.tsx` - Product image gallery
    - `product-info.tsx` - Product details display
    - `related-products.tsx` - Related products section
  - `components/search/` - Search components (Phase 3)
    - `search-bar.tsx` - Search input component
    - `search-results.tsx` - Search results display
    - `filter-sidebar.tsx` - Search filters sidebar
  - `components/admin/` - Admin components (Phase 3)
    - `products/` - Product management components
    - `categories/` - Category management components
- `lib/` - Utility functions and business logic
  - `lib/supabase/` - Supabase integration
  - `lib/utils/` - General utilities
  - `lib/repositories/` - Data access layer
    - `user-repository.ts` - User data management with avatar support
    - `product-repository.ts` - Product data management (Phase 3)
    - `category-repository.ts` - Category data management (Phase 3)
    - `search-repository.ts` - Search functionality (Phase 3)
- `types/` - TypeScript type definitions
  - `types/supabase.ts` - Database types including user profiles with avatar
  - `types/user.ts` - User-related types
  - `types/product.ts` - Product-related types (Phase 3)
  - `types/search.ts` - Search-related types (Phase 3)
- `tests/` - Test files and configurations
  - `tests/auth/` - Authentication test suites
  - `tests/products/` - Product test suites (Phase 3)
  - `tests/search/` - Search test suites (Phase 3)
  - `tests/setup.ts` - Test setup and configuration
- `public/` - Static assets
- `scripts/` - Utility scripts and automation tools
- `.cursor/` - Documentation and project guidelines
  - `project-plan.md` - Overall project roadmap
  - `PHASE3.md` - Phase 3 guide and resources
  - `rules/` - Project rules and guidelines
  - `checklists/` - Project progress checklists
  - `docs/` - Project documentation
  - `completed-tasks/` - Archived completed task documentation
- `docs/` - Application documentation
  - `phase3-implementation.md` - Phase 3 implementation guide
  - `api/` - API documentation

## Documentation

All project documentation is organized in the following locations:

- `.cursor/` - Project guides, checklists, and development standards
  - `project-plan.md` - Overall project roadmap and status
  - `PHASE3.md` - Phase 3 reference guide
  - `rules/` - Project rules and guidelines
    - `project-structure.mdc` - This file
    - `phase-transitions.mdc` - Phase transition rules
    - `development-standards.mdc` - Coding standards
    - `database-schema-reference.mdc` - Database schema reference
    - `admin-portal-reference.mdc` - Admin portal reference
  - `docs/` - Additional project documentation
    - `error-handling.md` - Error handling guidelines
    - `security-policies.md` - Security policies documentation
  - `guides/` - Development guidelines
    - `supabase-integration-guide.md` - Guide for Supabase integration
    - `typescript-errors-guide.md` - Guide for fixing TypeScript errors
    - `shadcn-guidelines.md` - Guidelines for using shadcn/ui
    - `commit-rules.md` - Guidelines for commit messages
    - `CURSOR-DEBUGGING-GUIDE.md` - Guide for debugging issues
  - `testing/` - Testing documentation
    - `test-checklist.md` - Testing checklist
    - `auth-testing.md` - Authentication testing guide
  - `deployment/` - Deployment documentation
    - `DEPLOY.md` - Guide for deploying the application
    - `deployment-checklist.md` - Checklist for deployment
    - `deployment-monitoring.md` - Guide for monitoring deployments
  - `performance/` - Performance documentation
    - `performance-results.md` - Performance testing results
    - `lighthouse-testing.md` - Lighthouse testing results
  - `checklists/` - Project progress tracking
    - `phase3-progress.md` - Current Phase 3 progress
    - `code-quality-fixes.md` - Code quality improvements tracking
  - `completed-tasks/` - Archived documentation from completed phases
    - `phase1-progress-report.md` - Phase 1 progress report
    - `phase2-completion.md` - Completed Phase 2 checklist
    - `phase3-prep.md` - Phase 3 preparation tasks

- `docs/` - Application documentation
  - `phase3-implementation.md` - Phase 3 implementation guide
  - `api/` - API documentation

## Scripts Organization

- `scripts/` - All utility and automation scripts
  - `fixes/` - Phase-specific fix scripts
  - `migrations/` - Database migration scripts
  - `seed/` - Database seed scripts for development

## Special Files

- `middleware.ts` - Next.js middleware for auth and routing (root level)
- `instrumentation.ts` - Performance monitoring and error tracking (root level)
- `.eslintrc.js` - ESLint configuration with phase-specific rules

## Phase-Specific Organization

### Phase 1 (Completed)
- âœ… Main application functionality
- âœ… UI components and layouts
- âœ… Current routing and pages
- âœ… Non-Supabase utilities

### Phase 2 (Completed)
- âœ… Authentication system with Supabase Auth
- âœ… User profile components
- âœ… Shipping address management
- âœ… User preferences management
- âœ… Profile image upload with Supabase storage
- âœ… Type-safe Sentry integration

### Phase 3 (Current)
- ðŸ”„ Product database schema
- ðŸ”„ Product components
- ðŸ”„ Search functionality
- ðŸ”„ Admin interface
- ðŸ”„ Product images with Supabase storage